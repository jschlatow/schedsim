# This test reflects a scenario with multiple device-driver (DD) threads on
# highest # priority and multimedia (MM) threads on second-highest priority. A
# CPU-bound desktop-priority thread is run on lower priority to simulate
# a group of desktop threads that gets a 50% CPU share.
#
# The weights are assigned for BVT according to the following policy:
# - device-driver threads get weight 1
# - multimedia threads get weight 2
# - the group of desktop threads is assigned a weight such that it gets a
#   CPU share of 50%
#
# Note that in this scenario DD4, MM1 and MM2 slightly exceed their share of
# 6.25% resp. 12.5%. This is intended to simulate whether the scheduler deals
# gracefully with such a situtation. For BVT, high warp values allow maintaining
# prioritisation of DD over MM over Desktop while a relatively low warp limit
# makes sure that a prioritised thread cannot run for too long.
#
# Ideally, all DD and MM threads achieve low latencies. Changing the runtime
# of DD4 to, e.g., 38ms should not significantly influence the latencies of
# the other threads. The same holds for MM1/MM2.
#
# With BVT and large MM/DD warp values, the desktop thread does not get its
# full CPU share but the MM/DD threads are able to achieve low latencies.
#
# With hierarchical BVT, the number and weights of desktop threads does not
# matter. The conjunction of all desktop threads will receive a minimum CPU
# share as defined by the first-level scheduler.

thread	start	runtime	weight	priority
DD4	every 60ms	8ms	1	3
DD3	every 60ms	4ms	1	3
DD2	every 60ms	2ms	1	3
DD1	every 60ms	1ms	1	3
MM1	every 30ms	5ms	2	2
MM2	every 30ms	5ms	2	2
Desktop	0s	1s	8	1
